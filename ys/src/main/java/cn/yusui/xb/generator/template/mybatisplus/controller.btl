package ${entity.controllerPackage};

import cn.yusui.xb.common.annotation.SystemLog;
import cn.yusui.xb.common.utils.PageUtil;
import cn.yusui.xb.common.utils.ResultUtil;
import cn.yusui.xb.common.vo.PageVo;
import cn.yusui.xb.common.vo.Result;
import ${entity.entityPackage}.${entity.className};
import ${entity.servicePackage}.${entity.className}Service;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;

/**
 * @author ${entity.author}
 */
@Slf4j
@RestController
@Api(description = "${entity.description}管理接口")
@RequestMapping("/xboot/${entity.classNameLowerCase}")
@Transactional
public class ${entity.className}Controller{

    @Autowired
    private ${entity.className}Service ${entity.classNameLowerCase}Service;

    @RequestMapping(value = "/getPage",method = RequestMethod.POST)
    @ApiOperation(value = "获取全部数据")
    public Result<Page<${entity.className}>> getAll(@ModelAttribute ${entity.className} ${entity.classNameLowerCase},@ModelAttribute PageVo pageVo){

        Page<${entity.className}> page = new Page<>(pageVo.getPageNumber(),pageVo.getPageSize());
        Page<${entity.className}> ${entity.classNameLowerCase}Page = ${entity.classNameLowerCase}Service.selectListPage(page,${entity.classNameLowerCase});

        return new ResultUtil<Page<${entity.className}>>().setData(${entity.classNameLowerCase}Page);
    }

    @RequestMapping(value = "/save",method = RequestMethod.POST)
    @ApiOperation(value = "保存数据")
    @SystemLog(description = "保存${entity.description}数据")
    public Result<Object> saveOrUpdate(@ModelAttribute ${entity.className} ${entity.classNameLowerCase}){
        boolean bo = ${entity.classNameLowerCase}Service.save(${entity.classNameLowerCase});
        return new ResultUtil<Object>().setSuccessMsg("成功");
    }

    @RequestMapping(value = "/update",method = RequestMethod.POST)
    @ApiOperation(value = "更新数据")
    @SystemLog(description = "更新${entity.description}数据")
    public Result<Object> updateById(@ModelAttribute ${entity.className} ${entity.classNameLowerCase}){
        boolean bo = ${entity.classNameLowerCase}Service.updateById(${entity.classNameLowerCase});
        return new ResultUtil<Object>().setSuccessMsg("成功");
    }

    @RequestMapping(value = "/removeByIds",method = RequestMethod.POST)
    @ApiOperation(value = "根据id批量删除")
    @SystemLog(description = "根据id批量删除${entity.description}数据")
    public Result<Object> removeByIds(@RequestParam("ids") List<String> Ids){
        boolean bo = ${entity.classNameLowerCase}Service.removeByIds(Ids);
        return new ResultUtil<Object>().setSuccessMsg("成功");
    }

}
